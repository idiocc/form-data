{
"version":3,
"file":"compile/form-data.js",
"lineCount":1258,
"mappings":"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",
"sources":["node_modules/stream/index.js","node_modules/events/index.js","node_modules/@idio/dicer/src/streamsearch/index.js","node_modules/@idio/dicer/src/PartStream.js","node_modules/@idio/dicer/src/HeaderParser.js","node_modules/@idio/dicer/src/index.js","node_modules/@goa/busboy/src/utils.js","node_modules/@goa/busboy/src/BusBoy.js","node_modules/@goa/busboy/src/types/multipart.js","node_modules/@goa/busboy/src/types/urlencoded.js","node_modules/@goa/busboy/src/index.js","node_modules/@multipart/append-field/src/lib/parse-path.js","node_modules/@multipart/append-field/src/lib/set-value.js","node_modules/@multipart/append-field/src/index.js","src/lib/file-appender.js","src/lib/error.js","src/lib/counter.js","src/lib/make-middleware.js","node_modules/crypto/index.js","node_modules/os/index.js","node_modules/path/index.js","node_modules/fs/index.js","node_modules/erotic/src/lib.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/makepromise/src/index.js","node_modules/@wrote/read-dir-structure/src/index.js","node_modules/@wrote/rm/src/index.js","node_modules/@wrote/ensure-path/src/index.js","src/storage/disk.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","src/storage/memory.js","src/index.js","src/depack.js"],
"sourcesContent":["export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","export default events\nexport const {\n  EventEmitter,\n} = events","/*\n  Based heavily on the Streaming Boyer-Moore-Horspool C++ implementation\n  by Hongli Lai at: https://github.com/FooBarWidget/boyer-moore-horspool\n*/\nimport { EventEmitter } from 'events'\n\nfunction jsmemcmp(buf1, pos1, buf2, pos2, num) {\n  for (var i = 0; i < num; ++i, ++pos1, ++pos2)\n    if (buf1[pos1] !== buf2[pos2])\n      return false\n  return true\n}\n\nexport default class SBMH extends EventEmitter {\n  constructor(needle) {\n    super()\n    if (typeof needle === 'string')\n      needle = new Buffer(needle)\n    var i, j, needle_len = needle.length\n\n    this.maxMatches = Infinity\n    this.matches = 0\n\n    this._occ = new Array(256)\n    this._lookbehind_size = 0\n    this._needle = needle\n    this._bufpos = 0\n\n    this._lookbehind = new Buffer(needle_len)\n\n    // Initialize occurrence table.\n    for (j = 0; j < 256; ++j)\n      this._occ[j] = needle_len\n\n    // Populate occurrence table with analysis of the needle,\n    // ignoring last letter.\n    if (needle_len >= 1) {\n      for (i = 0; i < needle_len - 1; ++i)\n        this._occ[needle[i]] = needle_len - 1 - i\n    }\n  }\n  reset() {\n    this._lookbehind_size = 0\n    this.matches = 0\n    this._bufpos = 0\n  }\n  push(chunk, pos = 0) {\n    var r, chlen\n    if (!Buffer.isBuffer(chunk))\n      chunk = new Buffer(chunk, 'binary')\n    chlen = chunk.length\n    this._bufpos = pos\n    while (r !== chlen && this.matches < this.maxMatches)\n      r = this._sbmh_feed(chunk)\n    return r\n  }\n  _sbmh_feed(data) {\n    var len = data.length, needle = this._needle, needle_len = needle.length\n\n    // Positive: points to a position in `data`\n    //           pos == 3 points to data[3]\n    // Negative: points to a position in the lookbehind buffer\n    //           pos == -2 points to lookbehind[lookbehind_size - 2]\n    var pos = -this._lookbehind_size,\n      last_needle_char = needle[needle_len - 1],\n      occ = this._occ,\n      lookbehind = this._lookbehind,\n      ch\n\n    if (pos < 0) {\n    // Lookbehind buffer is not empty. Perform Boyer-Moore-Horspool\n    // search with character lookup code that considers both the\n    // lookbehind buffer and the current round's haystack data.\n    //\n    // Loop until\n    //   there is a match.\n    // or until\n    //   we've moved past the position that requires the\n    //   lookbehind buffer. In this case we switch to the\n    //   optimized loop.\n    // or until\n    //   the character to look at lies outside the haystack.\n      while (pos < 0 && pos <= len - needle_len) {\n        ch = this._sbmh_lookup_char(data, pos + needle_len - 1)\n\n        if (ch === last_needle_char\n          && this._sbmh_memcmp(data, pos, needle_len - 1)) {\n          this._lookbehind_size = 0\n          ++this.matches\n          if (pos > -this._lookbehind_size)\n            this.emit('info', true, lookbehind, 0, this._lookbehind_size + pos)\n          else\n            this.emit('info', true)\n\n          return (this._bufpos = pos + needle_len)\n        } else\n          pos += occ[ch]\n      }\n\n      // No match.\n\n      if (pos < 0) {\n      // There's too few data for Boyer-Moore-Horspool to run,\n      // so let's use a different algorithm to skip as much as\n      // we can.\n      // Forward pos until\n      //   the trailing part of lookbehind + data\n      //   looks like the beginning of the needle\n      // or until\n      //   pos == 0\n        while (pos < 0 && !this._sbmh_memcmp(data, pos, len - pos))\n          pos++\n      }\n\n      if (pos >= 0) {\n      // Discard lookbehind buffer.\n        this.emit('info', false, lookbehind, 0, this._lookbehind_size)\n        this._lookbehind_size = 0\n      } else {\n      // Cut off part of the lookbehind buffer that has\n      // been processed and append the entire haystack\n      // into it.\n        var bytesToCutOff = this._lookbehind_size + pos\n\n        if (bytesToCutOff > 0) {\n        // The cut off data is guaranteed not to contain the needle.\n          this.emit('info', false, lookbehind, 0, bytesToCutOff)\n        }\n\n        lookbehind.copy(lookbehind, 0, bytesToCutOff,\n          this._lookbehind_size - bytesToCutOff)\n        this._lookbehind_size -= bytesToCutOff\n\n        data.copy(lookbehind, this._lookbehind_size)\n        this._lookbehind_size += len\n\n        this._bufpos = len\n        return len\n      }\n    }\n\n    if (pos >= 0)\n      pos += this._bufpos\n\n    // Lookbehind buffer is now empty. Perform Boyer-Moore-Horspool\n    // search with optimized character lookup code that only considers\n    // the current round's haystack data.\n    while (pos <= len - needle_len) {\n      ch = data[pos + needle_len - 1]\n\n      if (ch === last_needle_char\n        && data[pos] === needle[0]\n        && jsmemcmp(needle, 0, data, pos, needle_len - 1)) {\n        ++this.matches\n        if (pos > 0)\n          this.emit('info', true, data, this._bufpos, pos)\n        else\n          this.emit('info', true)\n\n        return (this._bufpos = pos + needle_len)\n      } else\n        pos += occ[ch]\n    }\n\n    // There was no match. If there's trailing haystack data that we cannot\n    // match yet using the Boyer-Moore-Horspool algorithm (because the trailing\n    // data is less than the needle size) then match using a modified\n    // algorithm that starts matching from the beginning instead of the end.\n    // Whatever trailing data is left after running this algorithm is added to\n    // the lookbehind buffer.\n    if (pos < len) {\n      while (pos < len && (data[pos] !== needle[0]\n                         || !jsmemcmp(data, pos, needle, 0, len - pos))) {\n        ++pos\n      }\n      if (pos < len) {\n        data.copy(lookbehind, 0, pos, pos + (len - pos))\n        this._lookbehind_size = len - pos\n      }\n    }\n\n    // Everything until pos is guaranteed not to contain needle data.\n    if (pos > 0)\n      this.emit('info', false, data, this._bufpos, pos < len ? pos : len)\n\n    this._bufpos = len\n    return len\n  }\n  _sbmh_lookup_char(data, pos) {\n    if (pos < 0) {\n      /** @suppress {checkTypes} */\n      const res = this._lookbehind[this._lookbehind_size + pos]\n      return res\n    }\n    else\n      return data[pos]\n  }\n  _sbmh_memcmp(data, pos, len) {\n    var i = 0\n\n    while (i < len) {\n      if (this._sbmh_lookup_char(data, pos + i) === this._needle[i])\n        ++i\n      else\n        return false\n    }\n    return true\n  }\n}\n\n/**\n * @license MIT streamsearch by Brian White\n * https://github.com/mscdex/streamsearch\n */","import { Readable } from 'stream'\n\nexport default class PartStream extends Readable {\n  constructor(opts) {\n    super(opts)\n  }\n  _read() {}\n}","import { EventEmitter } from 'events'\nimport StreamSearch from './streamsearch'\n\nconst B_DCRLF = Buffer.from('\\r\\n\\r\\n')\nconst RE_CRLF = /\\r\\n/g\nconst RE_HDR = /^([^:]+):[ \\t]?([\\x00-\\xFF]+)?$/ // eslint-disable-line\nconst MAX_HEADER_PAIRS = 2000 // from node's http.js\nconst MAX_HEADER_SIZE = 80 * 1024 // from node's http_parser\n\nexport default class HeaderParser extends EventEmitter {\n  /**\n   * @param {_idio.DicerConfig} [cfg] Options for the program.\n   * @param {string} [cfg.boundary] This is the boundary used to detect the beginning of a new part.\n   * @param {boolean} [cfg.headerFirst=false] If true, preamble header parsing will be performed first. Default `false`.\n   * @param {boolean} [cfg.partHwm] High watermark for parsing parts.\n   * @param {number} [cfg.maxHeaderPairs=2000] The maximum number of header key=>value pairs to parse. Default `2000`.\n   */\n  constructor(cfg = {}) {\n    super()\n    const { maxHeaderPairs = MAX_HEADER_PAIRS } = cfg\n\n    // var self = this\n    this.nread = 0\n    this.maxed = false\n    this.npairs = 0\n    this.maxHeaderPairs = maxHeaderPairs\n    this.buffer = ''\n    this.header = {}\n    this.finished = false\n    this.ss = new StreamSearch(B_DCRLF)\n    this.ss.on('info', (isMatch, data, start, end) => {\n      if (data && !this.maxed) {\n        if (this.nread + (end - start) > MAX_HEADER_SIZE) {\n          end = (MAX_HEADER_SIZE - this.nread)\n          this.nread = MAX_HEADER_SIZE\n        } else\n          this.nread += (end - start)\n\n        if (this.nread === MAX_HEADER_SIZE)\n          this.maxed = true\n\n        this.buffer += data.toString('binary', start, end)\n      }\n      if (isMatch)\n        this._finish()\n    })\n  }\n  push(data) {\n    var r = this.ss.push(data)\n    if (this.finished)\n      return r\n  }\n  reset() {\n    this.finished = false\n    this.buffer = ''\n    this.header = {}\n    this.ss.reset()\n  }\n  _finish() {\n    if (this.buffer)\n      this._parseHeader()\n    this.ss.matches = this.ss.maxMatches\n    var header = this.header\n    this.header = {}\n    this.buffer = ''\n    this.finished = true\n    this.nread = this.npairs = 0\n    this.maxed = false\n    this.emit('header', header)\n  }\n  _parseHeader() {\n    if (this.npairs === this.maxHeaderPairs)\n      return\n\n    var lines = this.buffer.split(RE_CRLF), len = lines.length, m, h,\n      modded = false\n\n    for (let i = 0; i < len; ++i) {\n      if (lines[i].length === 0)\n        continue\n      if (lines[i][0] == '\\t' || lines[i][0] == ' ') {\n        // folded header content\n        // RFC2822 says to just remove the CRLF and not the whitespace following\n        // it, so we follow the RFC and include the leading whitespace ...\n        this.header[h][this.header[h].length - 1] += lines[i]\n      } else {\n        m = RE_HDR.exec(lines[i])\n        if (m) {\n          h = m[1].toLowerCase()\n          if (m[2]) {\n            if (this.header[h] === undefined)\n              this.header[h] = [m[2]]\n            else\n              this.header[h].push(m[2])\n          } else\n            this.header[h] = ['']\n          if (++this.npairs === this.maxHeaderPairs)\n            break\n        } else {\n          this.buffer = lines[i]\n          modded = true\n          break\n        }\n      }\n    }\n    if (!modded)\n      this.buffer = ''\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DicerConfig} _idio.DicerConfig\n */","import { Writable } from 'stream'\nimport StreamSearch from './streamsearch'\nimport PartStream from './PartStream'\nimport HeaderParser from './HeaderParser'\n\nconst DASH = 45\nconst B_ONEDASH = Buffer.from('-')\nconst B_CRLF = Buffer.from('\\r\\n')\nconst EMPTY_FN = () => {}\n\n/**\n * @implements {_idio.Dicer}\n */\nexport default class Dicer extends Writable {\n  /**\n   * @param {!_idio.DicerConfig} [cfg] Options for the program.\n   * @param {string} [cfg.boundary] This is the boundary used to detect the beginning of a new part.\n   * @param {boolean} [cfg.headerFirst=false] If true, preamble header parsing will be performed first. Default `false`.\n   * @param {boolean} [cfg.partHwm] High watermark for parsing parts.\n   * @param {number} [cfg.maxHeaderPairs=2000] The maximum number of header key=>value pairs to parse. Default `2000`.\n   */\n  constructor(cfg) {\n    super(/** @type {!stream.WritableOptions|undefined} */ (cfg))\n    if (!cfg || (!cfg.headerFirst && typeof cfg.boundary != 'string'))\n      throw new TypeError('Boundary required')\n\n    if (typeof cfg.boundary == 'string')\n      this.setBoundary(cfg.boundary)\n    else\n      /** @type {!StreamSearch|undefined} */\n      this._bparser = undefined\n\n    this._headerFirst = cfg.headerFirst\n\n    this._dashes = 0\n    this._parts = 0\n    this._finished = false\n    this._realFinish = false\n    this._isPreamble = true\n    this._justMatched = false\n    this._firstWrite = true\n    this._inHeader = true\n    /**\n     * @type {!PartStream|undefined}\n     */\n    this._part = undefined\n    this._cb = undefined\n    this._ignoreData = false\n    this._partOpts = /** @type {!stream.ReadableOptions} */ (typeof cfg.partHwm == 'number'\n      ? { highWaterMark: cfg.partHwm }\n      : {})\n    this._pause = false\n\n    this._hparser = new HeaderParser(cfg)\n    this._hparser.on('header', (header) => {\n      this._inHeader = false\n      this._part.emit('header', header)\n    })\n  }\n  emit(ev) {\n    if (ev == 'finish' && !this._realFinish) {\n      if (!this._finished) {\n        process.nextTick(() => {\n          this.emit('error', new Error('Unexpected end of multipart data'))\n          if (this._part && !this._ignoreData) {\n            var type = (this._isPreamble ? 'Preamble' : 'Part')\n            this._part.emit('error', new Error(type + ' terminated early due to unexpected end of multipart data'))\n            this._part.push(null)\n            process.nextTick(() => {\n              this._realFinish = true\n              this.emit('finish')\n              this._realFinish = false\n            })\n            return\n          }\n          this._realFinish = true\n          this.emit('finish')\n          this._realFinish = false\n        })\n      }\n    } else\n      Writable.prototype.emit.apply(this, arguments)\n    return false\n  }\n  _write(data, encoding, cb) {\n    // ignore unexpected data (e.g. extra trailer data after finished)\n    if (!this._hparser && !this._bparser)\n      return cb()\n\n    if (this._headerFirst && this._isPreamble) {\n      if (!this._part) {\n        this._part = new PartStream(this._partOpts)\n        if (this._events['preamble'])\n          this.emit('preamble', this._part)\n        else\n          this._ignore()\n      }\n      const r = this._hparser.push(data)\n      if (!this._inHeader && r !== undefined && r < data.length)\n        data = data.slice(r)\n      else\n        return cb()\n    }\n\n    // allows for \"easier\" testing\n    if (this._firstWrite) {\n      // this.start = +new Date\n      this._bparser.push(B_CRLF)\n      this._firstWrite = false\n    }\n\n    // this.start = +new Date\n    this._bparser.push(data)\n\n    if (this._pause)\n      this._cb = cb\n    else\n      cb()\n  }\n  reset() {\n    this._part = undefined\n    this._bparser = undefined\n    this._hparser = undefined\n  }\n  setBoundary(boundary) {\n    this._bparser = new StreamSearch('\\r\\n--' + boundary)\n    this._bparser.on('info', (isMatch, data, start, end) => {\n      this._oninfo(isMatch, data, start, end)\n      // const duration = +new Date - this.start\n      // console.log('found in %sms', duration)\n    })\n  }\n  _ignore() {\n    if (this._part && !this._ignoreData) {\n      this._ignoreData = true\n      this._part.on('error', EMPTY_FN)\n      // we must perform some kind of read on the stream even though we are\n      // ignoring the data, otherwise node's Readable stream will not emit 'end'\n      // after pushing null to the stream\n      this._part.resume()\n    }\n  }\n  _oninfo(isMatch, data, start, end) {\n    var buf, i = 0, r, ev, shouldWriteMore = true\n\n    if (!this._part && this._justMatched && data) {\n      while (this._dashes < 2 && (start + i) < end) {\n        if (data[start + i] === DASH) {\n          ++i\n          ++this._dashes\n        } else {\n          if (this._dashes)\n            buf = B_ONEDASH\n          this._dashes = 0\n          break\n        }\n      }\n      if (this._dashes === 2) {\n        if ((start + i) < end && this._events.trailer)\n          this.emit('trailer', data.slice(start + i, end))\n        this.reset()\n        this._finished = true\n        // no more parts will be added\n        if (this._parts === 0) {\n          this._realFinish = true\n          this.emit('finish')\n          this._realFinish = false\n        }\n      }\n      if (this._dashes)\n        return\n    }\n    if (this._justMatched)\n      this._justMatched = false\n    if (!this._part) {\n      this._part = new PartStream(this._partOpts)\n      this._part._read = () => {\n        this._unpause()\n      }\n      ev = this._isPreamble ? 'preamble' : 'part'\n      if (this._events[ev])\n        this.emit(ev, this._part)\n      else\n        this._ignore()\n      if (!this._isPreamble)\n        this._inHeader = true\n    }\n    if (data && start < end && !this._ignoreData) {\n      if (this._isPreamble || !this._inHeader) {\n        if (buf)\n          shouldWriteMore = this._part.push(buf)\n        shouldWriteMore = this._part.push(data.slice(start, end))\n        if (!shouldWriteMore)\n          this._pause = true\n      } else if (!this._isPreamble && this._inHeader) {\n        if (buf)\n          this._hparser.push(buf)\n        r = this._hparser.push(data.slice(start, end))\n        if (!this._inHeader && r !== undefined && r < end)\n          this._oninfo(false, data, start + r, end)\n      }\n    }\n    if (isMatch) {\n      this._hparser.reset()\n      if (this._isPreamble)\n        this._isPreamble = false\n      else {\n        ++this._parts\n        this._part.on('end', () => {\n          if (--this._parts === 0) {\n            if (this._finished) {\n              this._realFinish = true\n              this.emit('finish')\n              this._realFinish = false\n            } else {\n              this._unpause()\n            }\n          }\n        })\n      }\n      this._part.push(null)\n      this._part = undefined\n      this._ignoreData = false\n      this._justMatched = true\n      this._dashes = 0\n    }\n  }\n  _unpause() {\n    if (!this._pause) return\n\n    this._pause = false\n    if (this._cb) {\n      const cb = this._cb\n      this._cb = undefined\n      cb()\n    }\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').DicerConfig} _idio.DicerConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').ReadableOptions} stream.ReadableOptions\n */\n\n/**\n * @license MIT dicer by Brian White\n * https://github.com/mscdex/dicer\n */","const { TextDecoder } = require(/* depack */'text-decoding')\n\nconst RE_ENCODED = /%([a-fA-F0-9]{2})/g\n\nfunction encodedReplacer(match, byte) {\n  return String.fromCharCode(parseInt(byte, 16))\n}\n\n/**\n * Parses the content-type header.\n * @param {string} str\n */\nexport function parseParams(str) {\n  let res = [],\n    state = 'key',\n    charset = '',\n    inquote = false,\n    escaping = false,\n    p = 0,\n    tmp = ''\n\n  for (var i = 0, len = str.length; i < len; ++i) {\n    if (str[i] === '\\\\' && inquote) {\n      if (escaping)\n        escaping = false\n      else {\n        escaping = true\n        continue\n      }\n    } else if (str[i] == '\"') {\n      if (!escaping) {\n        if (inquote) {\n          inquote = false\n          state = 'key'\n        } else\n          inquote = true\n        continue\n      } else\n        escaping = false\n    } else {\n      if (escaping && inquote)\n        tmp += '\\\\'\n      escaping = false\n      if ((state === 'charset' || state === 'lang') && str[i] === \"'\") {\n        if (state === 'charset') {\n          state = 'lang'\n          charset = tmp.substring(1)\n        } else\n          state = 'value'\n        tmp = ''\n        continue\n      } else if (state == 'key'\n                 && (str[i] == '*' || str[i] == '=')\n                 && res.length) {\n        if (str[i] == '*')\n          state = 'charset'\n        else\n          state = 'value'\n        res[p] = [tmp, undefined]\n        tmp = ''\n        continue\n      } else if (!inquote && str[i] == ';') {\n        state = 'key'\n        if (charset) {\n          if (tmp.length) {\n            tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n              'binary',\n              charset)\n          }\n          charset = ''\n        } else if (tmp.length) {\n          tmp = decodeText(tmp, 'binary', 'utf8')\n        }\n        if (res[p] === undefined)\n          res[p] = tmp\n        else\n          res[p][1] = tmp\n        tmp = ''\n        ++p\n        continue\n      } else if (!inquote && (str[i] === ' ' || str[i] === '\\t'))\n        continue\n    }\n    tmp += str[i]\n  }\n  if (charset && tmp.length) {\n    tmp = decodeText(tmp.replace(RE_ENCODED, encodedReplacer),\n      'binary',\n      charset)\n  } else if (tmp) {\n    tmp = decodeText(tmp, 'binary', 'utf8')\n  }\n\n  if (res[p] === undefined) {\n    if (tmp)\n      res[p] = tmp\n  } else\n    res[p][1] = tmp\n\n  return res\n}\n\n/**\n * @param {string} text\n * @param {string} textEncoding\n * @param {string} destEncoding\n */\nexport function decodeText(text, textEncoding, destEncoding) {\n  let ret\n  if (text) {\n    try {\n      ret = new TextDecoder(destEncoding)\n        .decode(Buffer.from(text, textEncoding))\n    } catch(e) {\n      /* ok */\n    }\n  }\n  return (typeof ret == 'string' ? ret : text)\n}\n/**\n * @param {!Buffer} buffer\n * @param {string} textEncoding\n * @param {string} [destEncoding]\n */\nexport function decodeBuffer(buffer, textEncoding, destEncoding) {\n  try {\n    buffer = new TextDecoder(destEncoding)\n      .decode(buffer)\n  } catch(e) {\n    /* ok */\n  }\n  return buffer\n  // return (typeof ret == 'string' ? ret : text)\n}\n\nconst HEX = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  ], RE_PLUS = /\\+/g\n\nexport class Decoder {\n  constructor() {\n    this.buffer = undefined\n  }\n  write(str) {\n    // Replace '+' with ' ' before decoding\n    str = str.replace(RE_PLUS, ' ')\n    var res = ''\n    var i = 0, p = 0, len = str.length\n    for (; i < len; ++i) {\n      if (this.buffer !== undefined) {\n        if (!HEX[str.charCodeAt(i)]) {\n          res += '%' + this.buffer\n          this.buffer = undefined\n          --i // retry character\n        } else {\n          this.buffer += str[i]\n          ++p\n          if (this.buffer.length === 2) {\n            res += String.fromCharCode(parseInt(this.buffer, 16))\n            this.buffer = undefined\n          }\n        }\n      } else if (str[i] == '%') {\n        if (i > p) {\n          res += str.substring(p, i)\n          p = i\n        }\n        this.buffer = ''\n        ++p\n      }\n    }\n    if (p < len && this.buffer === undefined)\n      res += str.substring(p)\n    return res\n  }\n  reset() {\n    this.buffer = undefined\n  }\n}\n\nexport function basename(path) {\n  if (typeof path != 'string')\n    return ''\n  for (let i = path.length - 1; i >= 0; --i) {\n    switch (path.charCodeAt(i)) {\n    case 0x2F: // '/'\n    case 0x5C: // '\\'\n      path = path.slice(i + 1)\n      return (path == '..' || path == '.' ? '' : path)\n    }\n  }\n  return (path == '..' || path == '.' ? '' : path)\n}\n\n\n/**\n * @param {_goa.BusBoyLimits} limits\n */\nexport const getLimits = (limits) => {\n  const {\n    fieldSize: fieldSizeLimit = 1 * 1024 * 1024,\n    fieldNameSize: fieldNameSizeLimit = 100,\n    fileSize: fileSizeLimit = Infinity,\n    files: filesLimit = Infinity,\n    fields: fieldsLimit = Infinity,\n    parts: partsLimit = Infinity,\n  } = limits\n  return {\n    fieldSizeLimit, fileSizeLimit, filesLimit, fieldsLimit, partsLimit,\n    fieldNameSizeLimit,\n  }\n}","import { Writable } from 'stream'\nimport { parseParams } from './utils'\n\nexport default class Busboy extends Writable {\n  /**\n   * @param {_goa.BusBoyConfig} [opts]\n   */\n  constructor(opts = {}) {\n    super(/** @type {!stream.WritableOptions} */ ({\n      ...(opts.highWaterMark ? { highWaterMark: opts.highWaterMark } : {}),\n    }))\n\n    this._done = false\n    this._parser = undefined\n    this._finished = false\n    this.hitFieldsLimit = false\n    this.hitFilesLimit = false\n    this.hitPartsLimit = false\n\n    this.opts = opts\n    if (opts.headers && typeof opts.headers['content-type'] == 'string')\n      this.parseHeaders(opts.headers)\n    else\n      throw new Error('Missing Content-Type')\n  }\n  /**\n   * @param {string|symbol} ev\n   * @param {...?} args\n   */\n  emit(ev, ...args) {\n    if (ev == 'finish') {\n      if (!this._done) {\n        this._parser && this._parser.end()\n        return false\n      } else if (this._finished) {\n        return false\n      }\n      this._finished = true\n    }\n    return super.emit(ev, ...args)\n  }\n  /**\n   * This is overridden by index.js file to avoid circular dependencies.\n   */\n  get TYPES() {\n    return []\n  }\n  parseHeaders(headers) {\n    this._parser = undefined\n    if (headers['content-type']) {\n      const parsed = parseParams(headers['content-type'])\n      let matched\n      /** @type {_goa.BusBoyParser} */\n      let Type\n      for (let i = 0; i < this.TYPES.length; ++i) {\n        Type = this.TYPES[i]\n        if (typeof Type.detect == 'function')\n          matched = Type.detect(parsed)\n        else\n          matched = Type.detect.test(parsed[0])\n        if (matched)\n          break\n      }\n      if (matched) {\n        const cfg = {\n          limits: this.opts.limits,\n          headers: headers,\n          parsedConType: parsed,\n          highWaterMark: this.opts.highWaterMark,\n          fileHwm: this.opts.fileHwm,\n          defCharset: this.opts.defCharset,\n          preservePath: this.opts.preservePath,\n        }\n        this._parser = new Type(this, cfg)\n        return\n      }\n    }\n    throw new Error('Unsupported content type: ' + headers['content-type'])\n  }\n  _write(chunk, encoding, cb) {\n    if (!this._parser)\n      return cb(new Error('Not ready to parse. Missing Content-Type?'))\n    this._parser.write(chunk, cb)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').BusBoyConfig} _goa.BusBoyConfig\n */","\n// TODO:\n//  * support 1 nested multipart level\n//    (see second multipart example here:\n//     http://www.w3.org/TR/html401/interact/forms.html#didx-multipartform-data)\n//  * support limits.fieldNameSize\n//     -- this will require modifications to utils.parseParams\n\nimport { Readable } from 'stream'\nimport Dicer from '@idio/dicer'\nimport { parseParams, decodeBuffer, basename, getLimits, decodeText } from '../utils'\nimport BusBoy from '../BusBoy' // eslint-disable-line\n\nconst RE_BOUNDARY = /^boundary$/i\nconst RE_FIELD = /^form-data$/i\nconst RE_CHARSET = /^charset$/i\nconst RE_FILENAME = /^filename$/i\nconst RE_NAME = /^name$/i\n\nexport default class Multipart {\n  static get detect() {\n    return /^multipart\\/form-data/i\n  }\n  /**\n   * @param {BusBoy} boy\n   * @param {_goa.BusBoyParserConfig} cfg\n   */\n  constructor(boy, {\n    limits = {}, defCharset = 'utf8', preservePath, fileHwm,\n    parsedConType = [], highWaterMark,\n  }) {\n    let i, len\n\n    const [,boundary] = parsedConType.find((t) => {\n      return Array.isArray(t) && RE_BOUNDARY.test(t[0])\n    }) || []\n    if (typeof boundary != 'string')\n      throw new Error('Multipart: Boundary not found')\n\n    function checkFinished() {\n      if (nends === 0 && finished && !boy._done) {\n        finished = false\n        process.nextTick(() => {\n          boy._done = true\n          boy.emit('finish')\n        })\n      }\n    }\n\n    const {\n      partsLimit, filesLimit, fileSizeLimit, fieldsLimit, fieldSizeLimit,\n    } = getLimits(limits)\n\n    /** @type {!stream.Readable|undefined} */\n    let curFile\n\n    let nfiles = 0,\n      nfields = 0,\n      nends = 0,\n      curField,\n      finished = false\n\n    this._needDrain = false\n    this._pause = false\n    this._cb = undefined\n    this._nparts = 0\n    this._boy = boy\n\n    const parserCfg = {\n      boundary: boundary,\n      maxHeaderPairs: limits.headerPairs,\n      highWaterMark,\n      fileHwm,\n    }\n\n    this.parser = new Dicer(parserCfg)\n    this.parser.on('drain', () => {\n      this._needDrain = false\n      if (this._cb && !this._pause) {\n        const cb = this._cb\n        this._cb = undefined\n        cb()\n      }\n    }).on('error', (err) => {\n      boy.emit('error', err)\n    }).on('finish', () => {\n      finished = true\n      checkFinished()\n    })\n\n    /** @param {stream.Readable} part */\n    const onPart = (part) => {\n      if (++this._nparts > partsLimit) {\n        this.parser.removeListener('part', onPart)\n        this.parser.on('part', skipPart)\n        boy.hitPartsLimit = true\n        boy.emit('partsLimit')\n        return skipPart(part)\n      }\n\n      // hack because streams2 _always_ doesn't emit 'end' until nextTick, so let\n      // us emit 'end' early since we know the part has ended if we are already\n      // seeing the next part\n      if (curField) {\n        const field = curField\n        field.emit('end')\n        field.removeAllListeners('end')\n      }\n\n      part.on('header', (/** @type {!Object<string, !Array<string>>} */ header) => {\n        let contype = 'text/plain'\n        let charset = defCharset\n        let encoding = '7bit'\n\n        let fieldname,\n          filename,\n          nsize = 0\n\n        if (header['content-type']) {\n          const parsed = parseParams(header['content-type'][0])\n          if (parsed[0]) {\n            contype = parsed[0].toLowerCase()\n            for (i = 0, len = parsed.length; i < len; ++i) {\n              if (RE_CHARSET.test(parsed[i][0])) {\n                charset = parsed[i][1].toLowerCase()\n                break\n              }\n            }\n          }\n        }\n\n        if (header['content-disposition']) {\n          const parsed = parseParams(header['content-disposition'][0])\n          if (!RE_FIELD.test(parsed[0]))\n            return skipPart(part)\n          for (i = 0, len = parsed.length; i < len; ++i) {\n            if (RE_NAME.test(parsed[i][0])) {\n              fieldname = parsed[i][1]\n            } else if (RE_FILENAME.test(parsed[i][0])) {\n              filename = parsed[i][1]\n              if (!preservePath)\n                filename = basename(filename)\n            }\n          }\n        } else\n          return skipPart(part)\n\n        if (header['content-transfer-encoding'])\n          encoding = header['content-transfer-encoding'][0].toLowerCase()\n\n        let onData,\n          onEnd\n        if (contype == 'application/octet-stream' || filename !== undefined) {\n          // file/binary field\n          if (nfiles == filesLimit) {\n            if (!boy.hitFilesLimit) {\n              boy.hitFilesLimit = true\n              boy.emit('filesLimit')\n            }\n            return skipPart(part)\n          }\n\n          ++nfiles\n\n          if (!boy._events.file) {\n            this.parser._ignore()\n            return\n          }\n\n          ++nends\n          const file = new FileStream({ highWaterMark: fileHwm })\n          curFile = file\n          file.on('end', () => {\n            --nends\n            this._pause = false\n            checkFinished()\n            if (this._cb && !this._needDrain) {\n              const cb = this._cb\n              this._cb = undefined\n              cb()\n            }\n          })\n          file._read = () => {\n            if (!this._pause)\n              return\n            this._pause = false\n            if (this._cb && !this._needDrain) {\n              const cb = this._cb\n              this._cb = undefined\n              cb()\n            }\n          }\n          boy.emit('file', fieldname, file, filename, encoding, contype, part)\n\n          onData = (data) => {\n            if ((nsize += data.length) > fileSizeLimit) {\n              const extralen = (fileSizeLimit - (nsize - data.length))\n              if (extralen > 0)\n                file.push(data.slice(0, extralen))\n              file.emit('limit')\n              file.truncated = true\n              part.removeAllListeners('data')\n            } else if (!file.push(data))\n              this._pause = true\n          }\n\n          onEnd = () => {\n            curFile = undefined\n            file.push(null)\n          }\n        } else {\n          // non-file field\n          if (nfields == fieldsLimit) {\n            if (!boy.hitFieldsLimit) {\n              boy.hitFieldsLimit = true\n              boy.emit('fieldsLimit')\n            }\n            return skipPart(part)\n          }\n\n          ++nfields\n          ++nends\n          const buffer = []\n          let truncated = false\n          curField = part\n\n          /** @param {Buffer} data */\n          onData = (data) => {\n            let d = data\n            nsize += data.length\n            if (nsize > fieldSizeLimit) {\n              d = Buffer.from(data, 0, fieldSizeLimit).slice(0, fieldSizeLimit)\n              truncated = true\n              part.removeAllListeners('data')\n            }\n            buffer.push(d)\n          }\n\n          onEnd = () => {\n            curField = undefined\n            const b = Buffer.concat(buffer)\n            const bu = decodeBuffer(b, charset)\n            boy.emit('field', fieldname, bu, false, truncated, encoding, contype)\n            --nends\n            checkFinished()\n          }\n        }\n\n        // https://github.com/nodejs/node/blob/df339bccf24839da473937bd523602cf68b114af/lib/_stream_readable.js#L111\n        part._readableState.sync = false\n\n        part.on('data', onData)\n        part.on('end', onEnd)\n      }).on('error', (err) => {\n        if (curFile)\n          curFile.emit('error', err)\n      })\n    }\n\n    this.parser.on('part', onPart)\n  }\n  end() {\n    if (this._nparts === 0 && !this._boy._done) {\n      process.nextTick(() => {\n        this._boy._done = true\n        this._boy.emit('finish')\n      })\n    } else if (this.parser.writable)\n      this.parser.end()\n  }\n  write(chunk, cb) {\n    let r\n    if ((r = this.parser.write(chunk)) && !this._pause)\n      cb()\n    else {\n      this._needDrain = !r\n      this._cb = cb\n    }\n  }\n}\n\n/**\n * @param {stream.Readable} part\n */\nfunction skipPart(part) {\n  part.resume()\n}\n\n/**\n * @implements {_goa.BusBoyFileStream}\n */\nclass FileStream extends Readable {\n  constructor(opts) {\n    super(opts)\n    this.truncated = false\n  }\n  _read() {}\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyParserConfig} _goa.BusBoyParserConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyLimits} _goa.BusBoyLimits\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingHttpHeaders} http.IncomingHttpHeaders\n */","import { Decoder, decodeText, getLimits } from '../utils'\nimport BusBoy from '../BusBoy' // eslint-disable-line\n\nconst RE_CHARSET = /^charset$/i\n\nexport default class UrlEncoded {\n  static get detect() {\n    return /^application\\/x-www-form-urlencoded/i\n  }\n  /**\n   * @param {BusBoy} boy\n   * @param {_goa.BusBoyParserConfig} cfg\n   */\n  constructor(boy, { limits = {}, parsedConType, defCharset = 'utf8' }) {\n    this.boy = boy\n    this._hitLimit = undefined\n\n    const { fieldSizeLimit, fieldNameSizeLimit, fieldsLimit } = getLimits(limits)\n    this.fieldSizeLimit = fieldSizeLimit\n    this.fieldNameSizeLimit = fieldNameSizeLimit\n    this.fieldsLimit = fieldsLimit\n\n    let charset = defCharset\n    for (let i = 0, len = parsedConType.length; i < len; ++i) {\n      if (Array.isArray(parsedConType[i])\n          && RE_CHARSET.test(parsedConType[i][0])) {\n        charset = parsedConType[i][1].toLowerCase()\n        break\n      }\n    }\n\n    this.decoder = new Decoder()\n    this.charset = charset\n    this._fields = 0\n    this._state = 'key'\n    this._checkingBytes = true\n    this._bytesKey = 0\n    this._bytesVal = 0\n    this._key = ''\n    this._val = ''\n    this._keyTrunc = false\n    this._valTrunc = false\n    this._hitlimit = false\n  }\n  write(data, cb) {\n    if (this._fields === this.fieldsLimit) {\n      if (!this.boy.hitFieldsLimit) {\n        this.boy.hitFieldsLimit = true\n        this.boy.emit('fieldsLimit')\n      }\n      return cb()\n    }\n\n    var idxeq, idxamp, i, p = 0, len = data.length\n\n    while (p < len) {\n      if (this._state == 'key') {\n        idxeq = idxamp = undefined\n        for (i = p; i < len; ++i) {\n          if (!this._checkingBytes)\n            ++p\n          if (data[i] === 0x3D/*=*/) {\n            idxeq = i\n            break\n          } else if (data[i] === 0x26/*&*/) {\n            idxamp = i\n            break\n          }\n          if (this._checkingBytes && this._bytesKey === this.fieldNameSizeLimit) {\n            this._hitLimit = true\n            break\n          } else if (this._checkingBytes)\n            ++this._bytesKey\n        }\n\n        if (idxeq !== undefined) {\n          // key with assignment\n          if (idxeq > p)\n            this._key += this.decoder.write(data.toString('binary', p, idxeq))\n          this._state = 'val'\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._val = ''\n          this._bytesVal = 0\n          this._valTrunc = false\n          this.decoder.reset()\n\n          p = idxeq + 1\n        } else if (idxamp !== undefined) {\n          // key with no assignment\n          ++this._fields\n          var key, keyTrunc = this._keyTrunc\n          if (idxamp > p)\n            key = (this._key += this.decoder.write(data.toString('binary', p, idxamp)))\n          else\n            key = this._key\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._key = ''\n          this._bytesKey = 0\n          this._keyTrunc = false\n          this.decoder.reset()\n\n          if (key.length) {\n            this.boy.emit('field', decodeText(key, 'binary', this.charset),\n              '',\n              keyTrunc,\n              false)\n          }\n\n          p = idxamp + 1\n          if (this._fields === this.fieldsLimit)\n            return cb()\n        } else if (this._hitLimit) {\n          // we may not have hit the actual limit if there are encoded bytes...\n          if (i > p)\n            this._key += this.decoder.write(data.toString('binary', p, i))\n          p = i\n          if ((this._bytesKey = this._key.length) === this.fieldNameSizeLimit) {\n            // yep, we actually did hit the limit\n            this._checkingBytes = false\n            this._keyTrunc = true\n          }\n        } else {\n          if (p < len)\n            this._key += this.decoder.write(data.toString('binary', p))\n          p = len\n        }\n      } else {\n        idxamp = undefined\n        for (i = p; i < len; ++i) {\n          if (!this._checkingBytes)\n            ++p\n          if (data[i] === 0x26/*&*/) {\n            idxamp = i\n            break\n          }\n          if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {\n            this._hitLimit = true\n            break\n          }\n          else if (this._checkingBytes)\n            ++this._bytesVal\n        }\n\n        if (idxamp !== undefined) {\n          ++this._fields\n          if (idxamp > p)\n            this._val += this.decoder.write(data.toString('binary', p, idxamp))\n          this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n            decodeText(this._val, 'binary', this.charset),\n            this._keyTrunc,\n            this._valTrunc)\n          this._state = 'key'\n\n          this._hitLimit = false\n          this._checkingBytes = true\n          this._key = ''\n          this._bytesKey = 0\n          this._keyTrunc = false\n          this.decoder.reset()\n\n          p = idxamp + 1\n          if (this._fields === this.fieldsLimit)\n            return cb()\n        } else if (this._hitLimit) {\n          // we may not have hit the actual limit if there are encoded bytes...\n          if (i > p)\n            this._val += this.decoder.write(data.toString('binary', p, i))\n          p = i\n          if ((this._val === '' && this.fieldSizeLimit === 0)\n              || (this._bytesVal = this._val.length) === this.fieldSizeLimit) {\n            // yep, we actually did hit the limit\n            this._checkingBytes = false\n            this._valTrunc = true\n          }\n        } else {\n          if (p < len)\n            this._val += this.decoder.write(data.toString('binary', p))\n          p = len\n        }\n      }\n    }\n    cb()\n  }\n  end() {\n    if (this.boy._done) return\n\n    if (this._state == 'key' && this._key.length > 0) {\n      this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n        '',\n        this._keyTrunc,\n        false)\n    } else if (this._state == 'val') {\n      this.boy.emit('field', decodeText(this._key, 'binary', this.charset),\n        decodeText(this._val, 'binary', this.charset),\n        this._keyTrunc,\n        this._valTrunc)\n    }\n    this.boy._done = true\n    this.boy.emit('finish')\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').BusBoyParserConfig} _goa.BusBoyParserConfig\n */","import Multipart from './types/multipart'\nimport Urlencoded from './types/urlencoded'\nimport _BusBoy from './BusBoy'\n\n/**\n * @implements {_goa.BusBoy}\n */\nexport default class BusBoy extends _BusBoy {\n  /**\n   * @param {_goa.BusBoyConfig} opts\n   */\n  constructor(opts) {\n    super(opts)\n  }\n  get TYPES() {\n    return [Multipart, Urlencoded]\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').BusBoyConfig} _goa.BusBoyConfig\n */","const reFirstKey = /^[^[]*/\nconst reDigitPath = /^\\[(\\d+)\\]/\nconst reNormalPath = /^\\[([^\\]]+)\\]/\n\nexport default function parsePath(key) {\n  function failure () {\n    return [{ type: 'object', key: key, last: true }]\n  }\n\n  const firstKey = reFirstKey.exec(key)[0]\n  if (!firstKey) return failure()\n\n  const len = key.length\n  let pos = firstKey.length\n  let tail = { type: 'object', key: firstKey }\n  const steps = [tail]\n\n  while (pos < len) {\n    let m\n\n    if (key[pos] === '[' && key[pos + 1] === ']') {\n      pos += 2\n      tail.append = true\n      if (pos !== len) return failure()\n      continue\n    }\n\n    m = reDigitPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'array'\n      tail = { type: 'array', key: parseInt(m[1], 10) }\n      steps.push(tail)\n      continue\n    }\n\n    m = reNormalPath.exec(key.substring(pos))\n    if (m !== null) {\n      pos += m[0].length\n      tail.nextType = 'object'\n      tail = { type: 'object', key: m[1] }\n      steps.push(tail)\n      continue\n    }\n\n    return failure()\n  }\n\n  tail.last = true\n  return steps\n}\n\n","function valueType (value) {\n  if (value === undefined) return 'undefined'\n  if (Array.isArray(value)) return 'array'\n  if (typeof value == 'object') return 'object'\n  return 'scalar'\n}\n\nfunction setLastValue(context, step, currentValue, entryValue) {\n  switch (valueType(currentValue)) {\n  case 'undefined':\n    if (step.append) {\n      context[step.key] = [entryValue]\n    } else {\n      context[step.key] = entryValue\n    }\n    break\n  case 'array':\n    context[step.key].push(entryValue)\n    break\n  case 'object':\n    return setLastValue(currentValue, { type: 'object', key: '', last: true }, currentValue[''], entryValue)\n  case 'scalar':\n    context[step.key] = [context[step.key], entryValue]\n    break\n  }\n\n  return context\n}\n\nexport default function setValue(context, step, currentValue, entryValue) {\n  if (step.last) return setLastValue(context, step, currentValue, entryValue)\n\n  let obj\n  switch (valueType(currentValue)) {\n  case 'undefined':\n    if (step.nextType == 'array') {\n      context[step.key] = []\n    } else {\n      context[step.key] = {}\n    }\n    return context[step.key]\n  case 'object':\n    return context[step.key]\n  case 'array':\n    if (step.nextType == 'array') {\n      return currentValue\n    }\n\n    obj = {}\n    context[step.key] = obj\n    currentValue.forEach(function (item, i) {\n      if (item !== undefined) obj['' + i] = item\n    })\n\n    return obj\n  case 'scalar':\n    obj = {}\n    obj[''] = currentValue\n    context[step.key] = obj\n    return obj\n  }\n}\n","import parsePath from './lib/parse-path'\nimport setValue from './lib/set-value'\n\n/**\n * Appends the field to the store.\n * @param {!Object} store The object to which to write the field.\n * @param {string} key The key, e.g., `name`, or `choice[0][language]`\n * @param {string} value The value of the field.\n */\nexport default function appendField(store, key, value) {\n  const steps = parsePath(key)\n\n  steps.reduce(function (context, step) {\n    return setValue(context, step, context[step.key], value)\n  }, store)\n}","function arrayRemove (arr, item) {\n  var idx = arr.indexOf(item)\n  if (~idx) arr.splice(idx, 1)\n}\n\nexport default class FileAppender {\n  /**\n   * @param {string} strategy\n   * @param {http.IncomingMessage} req\n   */\n  constructor(strategy, req) {\n    this.strategy = strategy\n    this.req = req\n\n    switch (strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': req.files = []; break\n    case 'OBJECT': req.files = {}; break\n    default: throw new Error('Unknown file strategy: ' + strategy)\n    }\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   */\n  insertPlaceholder({ fieldname }) {\n    const placeholder = /** @type {!_multipart.FormDataFile} */ ({\n      fieldname,\n    })\n\n    switch (this.strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': this.req.files.push(placeholder); break\n    case 'OBJECT':\n      if (this.req.files[fieldname]) {\n        this.req.files[fieldname].push(placeholder)\n      } else {\n        this.req.files[fieldname] = [placeholder]\n      }\n      break\n    }\n\n    return placeholder\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   */\n  removePlaceholder(placeholder) {\n    switch (this.strategy) {\n    case 'NONE': break\n    case 'VALUE': break\n    case 'ARRAY': arrayRemove(this.req.files, placeholder); break\n    case 'OBJECT':\n      if (this.req.files[placeholder.fieldname].length == 1) {\n        delete this.req.files[placeholder.fieldname]\n      } else {\n        arrayRemove(this.req.files[placeholder.fieldname], placeholder)\n      }\n      break\n    }\n  }\n  /**\n   * @param {_multipart.FormDataFile} placeholder The information about each file.\n   * @param {_multipart.FormDataFile} file The information about each file.\n   */\n  replacePlaceholder(placeholder, file) {\n    if (this.strategy == 'VALUE') {\n      this.req.file = file\n      return\n    }\n\n    delete placeholder.fieldname\n    Object.assign(placeholder, file)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","const errorMessages = {\n  'LIMIT_PART_COUNT': 'Too many parts',\n  'LIMIT_FILE_SIZE': 'File too large',\n  'LIMIT_FILE_COUNT': 'Too many files',\n  'LIMIT_FIELD_KEY': 'Field name too long',\n  'LIMIT_FIELD_VALUE': 'Field value too long',\n  'LIMIT_FIELD_COUNT': 'Too many fields',\n  'LIMIT_UNEXPECTED_FILE': 'Unexpected field',\n}\n\n/**\n * @implements {_multipart.FormDataError}\n */\nexport default class FormDataError extends Error {\n  constructor(message) {\n    super(message)\n    this.code = ''\n    this.field = undefined\n  }\n  /**\n   * @param {string} code\n   * @param {string} [field]\n   */\n  static create(code, field) {\n    const message = errorMessages[code]\n    const err = new FormDataError(message)\n    err.code = code\n    if (field) err.field = field\n    return err\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../..').FormDataError} _multipart.FormDataError\n */","import { EventEmitter } from 'events'\n\nexport default class Counter extends EventEmitter {\n  constructor() {\n    super()\n    this.value = 0\n  }\n  increment () {\n    this.value++\n  }\n  decrement () {\n    if (--this.value === 0) this.emit('zero')\n  }\n  isZero () {\n    return (this.value === 0)\n  }\n  onceZero(fn) {\n    if (this.isZero()) return fn()\n\n    this.once('zero', fn)\n  }\n  async awaitZero() {\n    await new Promise((r, j) => {\n      this.onceZero(r)\n      this.once('error', j)\n    })\n  }\n}","import Busboy from '@goa/busboy'\nimport appendField from '@multipart/append-field'\nimport FileAppender from './file-appender'\nimport FormDataError from './error'\nimport Counter from './counter'\n\nconst testMultipart = (headers) => {\n  const contentType = headers['content-type']\n  // https://github.com/google/closure-compiler/issues/3529\n  // const { 'content-type': contentType } = headers\n  if (!contentType) return false\n  return contentType.toLowerCase().startsWith('multipart/form-data')\n}\n\n/**\n * @param {{ limits: !_goa.BusBoyLimits,\n *           preservePath: boolean,\n *           storage: !_multipart.FormDataStorageEngine,\n *           fileFilter: !_multipart.FormDataFileFilter,\n *           fileStrategy: string }} options\n */\nexport default function makeMiddleware(options) {\n  /** @type {!_goa.Middleware} */\n  async function multerMiddleware(ctx, next) {\n    const { req } = ctx\n    if (!testMultipart(req.headers)) return next()\n\n    const { limits = {}, storage, fileFilter, fileStrategy, preservePath } = options\n\n    const body = {}\n    req.body = body\n\n    const busboy = new Busboy({\n      limits,\n      preservePath,\n      headers: req.headers,\n    })\n\n    const appender = new FileAppender(fileStrategy, req)\n    const pendingWrites = new Counter()\n    const uploadedFiles = []\n    let busboyFinished = false\n\n    busboy.on('field', (fieldname, value, fieldnameTruncated, valueTruncated) => {\n      // if (fieldnameTruncated) return abortWithCode('LIMIT_FIELD_KEY')\n      if (valueTruncated)\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_VALUE', fieldname))\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits.fieldNameSize && fieldname.length > limits.fieldNameSize) {\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_KEY'))\n      }\n\n      appendField(body, fieldname, value)\n    })\n\n    // handle files\n    busboy.on('file', async (fieldname, stream, filename, encoding, mimetype) => {\n      // don't attach to the files object, if there is no file\n      if (!filename) return stream.resume()\n\n      // Work around bug in Busboy (https://github.com/mscdex/busboy/issues/6)\n      if (limits.fieldNameSize && fieldname.length > limits.fieldNameSize) {\n        return busboy.emit('error', FormDataError.create('LIMIT_FIELD_KEY'))\n      }\n\n      /**\n       * @suppress {checkTypes}\n       * @type {!_multipart.FormDataFile}\n       */\n      const file = {\n        fieldname,\n        originalname: filename,\n        encoding,\n        mimetype,\n        stream,\n      }\n\n      const placeholder = appender.insertPlaceholder(file)\n      let aborting = false\n      const tryCancel = () => {\n        if (aborting) {\n          appender.removePlaceholder(placeholder)\n          return aborting\n        }\n      }\n\n      stream\n        .on('error', (err) => {\n          pendingWrites.decrement()\n          busboy.emit('error', err)\n        })\n        .on('limit', () => {\n          aborting = true\n          busboy.emit('error', FormDataError.create('LIMIT_FILE_SIZE', fieldname))\n        })\n\n      let res\n      try {\n        res = await fileFilter(req, file)\n      } catch (err) {\n        appender.removePlaceholder(placeholder)\n        busboy.emit('error', err)\n        return\n      }\n\n      if (!res) {\n        appender.removePlaceholder(placeholder)\n        stream.resume()\n        return\n      }\n\n      pendingWrites.increment()\n\n      try {\n        if (tryCancel()) return\n\n        const info = await storage._handleFile(req, file)\n        const fileInfo = /** @type {!_multipart.FormDataFile} */ ({ ...file, ...info })\n\n        if (tryCancel()) {\n          return uploadedFiles.push(fileInfo)\n        }\n\n        appender.replacePlaceholder(placeholder, fileInfo)\n        uploadedFiles.push(fileInfo)\n      } catch (error) {\n        appender.removePlaceholder(placeholder)\n        if (!busboyFinished) {\n          busboy.emit('error', error)\n        } else pendingWrites.emit('error', error)\n      } finally {\n        pendingWrites.decrement()\n      }\n    })\n\n    req.pipe(busboy)\n    const remove = file => storage._removeFile(req, file)\n\n    try {\n      await new Promise((r, j) => {\n        busboy.on('error', j)\n          .on('partsLimit', () => {\n            j(FormDataError.create('LIMIT_PART_COUNT'))\n          })\n          .on('filesLimit', () => {\n            j(FormDataError.create('LIMIT_FILE_COUNT'))\n          })\n          .on('fieldsLimit', () => {\n            j(FormDataError.create('LIMIT_FIELD_COUNT'))\n          })\n          .on('finish', r)\n      })\n    } catch(err) {\n      await pendingWrites.awaitZero()\n      const errors = await removeUploadedFiles(uploadedFiles, remove)\n      err['storageErrors'] = errors\n\n      throw err\n    } finally {\n      busboyFinished = true\n      req.unpipe(busboy)\n      busboy.removeAllListeners()\n    }\n    await pendingWrites.awaitZero()\n    await next()\n  }\n  return multerMiddleware\n}\n\n/**\n * @param {!Array<_multipart.FormDataFile>} uploadedFiles The list of uploaded files.\n * @param {!Function} remove The remove function.\n */\nasync function removeUploadedFiles(uploadedFiles, remove) {\n  const errors = await uploadedFiles.reduce(async (acc, file) => {\n    const accRes = await acc\n    try {\n      await remove(file)\n    } catch (err) {\n      err['file'] = file\n      err['field'] = file['fieldname']\n      accRes.push(err)\n    }\n    return accRes\n  }, [])\n\n  return errors\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@typedefs/goa').Middleware} _goa.Middleware\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/busboy').BusBoyLimits} _goa.BusBoyLimits\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFileFilter} _multipart.FormDataFileFilter\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataStorageEngine} _multipart.FormDataStorageEngine\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */","export default _crypto\nexport const {\n  Certificate,\n  Cipher,\n  Credentials,\n  DEFAULT_ENCODING,\n  Decipher,\n  DiffieHellman,\n  ECDH,\n  Hash,\n  Hmac,\n  Verify,\n  createCipher,\n  createCipheriv,\n  createCredentials,\n  createDecipher,\n  createDecipheriv,\n  createDiffieHellman,\n  createECDH,\n  createHash,\n  createHmac,\n  createSign,\n  createVerify,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getHashes,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  pseudoRandomBytes,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  timingSafeEqual,\n} = _crypto","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","import erotic from 'erotic'\n\nfunction checkArgumentIndex(length, i) {\n  if (i > length - 2) {\n    throw new Error('Function does not accept that many arguments.')\n  }\n}\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn !== 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error('Function does not accept any arguments.')\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      args.forEach((arg, i) => {\n        checkArgumentIndex(fnLength, i)\n      })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      checkArgumentIndex(fnLength, 0)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","import { lstat, readdir } from 'fs'\nimport makePromise from 'makepromise'\nimport { join, relative } from 'path'\n\n/**\n * Update information about directory's content with lstat.\n * @param {string} dirPath Path to the root directory\n * @param {!Array<string>} dirContent\n * @returns {!Promise<!Array<!_wrote.File>>} An array with file objects.\n */\nasync function lstatFiles(dirPath, dirContent) {\n  const readFiles = dirContent.map(async (relativePath) => {\n    const path = join(dirPath, relativePath)\n    const ls = await makePromise(lstat, path)\n    return {\n      lstat: ls,\n      path,\n      relativePath,\n    }\n  })\n  const res = await Promise.all(readFiles)\n  return res\n}\n\n/**\n * Check if lstat result is a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is a directory\n */\nconst isDirectory = lstatRes => lstatRes.lstat.isDirectory()\n/**\n * Check if lstat result is not a directory\n * @param {!_wrote.File} lstatRes\n * @param {!fs.Stats} lstatRes.lstat The stats of the item.\n * @param {string} lstatRes.path The full path of the item.\n * @param {string} lstatRes.relativePath The name of the item.\n * @returns {boolean} true if is not a directory\n */\nconst isNotDirectory = lstatRes => !lstatRes.lstat.isDirectory()\n\nconst getType = (lstatRes) => {\n  if (lstatRes.lstat.isDirectory()) {\n    return 'Directory'\n  }\n  if (lstatRes.lstat.isFile()) {\n    return 'File'\n  }\n  if (lstatRes.lstat.isSymbolicLink()) {\n    return 'SymbolicLink'\n  }\n}\n\n/**\n * Read a directory, and return its structure as an object. Only `Files`, `Directories` and `Symlinks` are included!\n * @param {string} dirPath Path to the directory.\n * @param {!_wrote.ReadDirStructureOpts} [opts] Options for reading the dir structure.\n * @param {!Array<string>} [opts.ignore] The list of paths inside of the directory to ignore, e.g., `[.git]`.\n * @returns {!Promise<!_wrote.DirectoryStructure>} An object reflecting the directory structure.\n * @example\n  ```js\n  const res = await readDirStructure('dir')\n  // result:\n  {\n    type: 'Directory',\n    content: {\n      'data.txt': {\n        type: 'File'\n      },\n      subdir: {\n        type: 'Directory',\n        content: {\n          'data-ln.txt': {\n            type: 'SymbolicLink'\n          },\n        }\n      }\n    }\n  }\n  ```\n */\nexport default async function readDirStructure(dirPath, opts = {}) {\n  if (!dirPath) {\n    throw new Error('Please specify a path to the directory')\n  }\n  const { ignore = [] } = opts\n  const ls = await makePromise(lstat, dirPath)\n  if (!ls.isDirectory()) {\n    const err = new Error('Path is not a directory')\n    err.code = 'ENOTDIR'\n    throw err\n  }\n  const dir = /** @type {!Array<string>} */ (await makePromise(readdir, dirPath))\n  const lsr = await lstatFiles(dirPath, dir)\n\n  const directories = lsr.filter(isDirectory) // reduce at once\n  const notDirectories = lsr.filter(isNotDirectory)\n\n  const files = notDirectories.reduce((acc, current) => {\n    const type = getType(current)\n    return {\n      ...acc,\n      [current.relativePath]: {\n        type,\n      },\n    }\n  }, {})\n\n  const dirs = await directories.reduce(async (acc, { path, relativePath }) => {\n    const rel = relative(dirPath, path)\n    if (ignore.includes(rel)) return acc\n    const res = await acc\n    const structure = await readDirStructure(path)\n    return {\n      ...res,\n      [relativePath]: structure,\n    }\n  }, {})\n\n  const content = {\n    ...files,\n    ...dirs,\n  }\n  return {\n    content,\n    type: 'Directory',\n  }\n}\n\n/**\n * After running the `readDirStructure`, this function can be used to flatten the `content` output and return the list of all files (not including symlinks).\n * @param {!_wrote.Content} content The recursive content of the directory.\n * @param {string} path The path to the directory.\n */\nexport const getFiles = (content, path) => {\n  let files = []\n  let dirs = []\n  Object.keys(content).forEach((key) => {\n    const { type } = content[key]\n    if (type == 'File') files.push(join(path, key))\n    else if (type == 'Directory') dirs.push(key)\n  })\n  const dirFiles = dirs.reduce((acc, dir) => {\n    const { content: c } =\n      /** @type {!_wrote.Content} */ (content[dir])\n    const f = getFiles(c, join(path, dir))\n    return [...acc, ...f]\n  }, [])\n  return [...files, ...dirFiles]\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').Content} _wrote.Content\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').ReadDirStructureOpts} _wrote.ReadDirStructureOpts\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').DirectoryStructure} _wrote.DirectoryStructure\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../').File} _wrote.File\n */","import { unlink, rmdir, lstat } from 'fs'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport makePromise from 'makepromise'\nimport { join } from 'path'\n\nconst removeFile = async (path) => {\n  await makePromise(unlink, path)\n}\n\n/**\n * Removes files and directories.\n * @param {string} path Path to remove.\n */\nconst removeDir = async (path) => {\n  const { content } = await readDirStructure(path)\n  const files = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'File' || type == 'SymbolicLink') return true\n    })\n  const dirs = Object.keys(/** @type {!Object} */ (content))\n    .filter((k) => {\n      const { type } = content[k]\n      if (type == 'Directory') return true\n    })\n  const filesFullPaths = files.map(file => join(path, file))\n  await Promise.all(\n    filesFullPaths.map(removeFile)\n  )\n  const dirsFullPaths = dirs.map(dir => join(path, dir))\n  await Promise.all(\n    dirsFullPaths.map(removeDir)\n  )\n  await makePromise(rmdir, path)\n}\n\n/**\n * Removes a path from the filesystem.\n * @param {string} path Path to the file or directory to remove.\n */\nconst rm = async (path) => {\n  const s = /** @type {!fs.Stats} */ (\n    await makePromise(lstat, path)\n  )\n  if (s.isDirectory()) {\n    await removeDir(path)\n  } else {\n    await removeFile(path)\n  }\n}\n\nexport default rm\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */\n\n/* documentary types/index.xml */\n","import { mkdir, mkdirSync } from 'fs'\nimport makePromise from 'makepromise'\nimport { dirname } from 'path'\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport default async function ensurePath(path) {\n  const dir = dirname(path)\n  try {\n    await make(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nasync function make(dir) {\n  try {\n    await makePromise(mkdir, dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      await make(parentDir)\n      await make(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}\n\n/**\n * Makes sure that a file can be created by creating all directories to which it belongs to synchronously, e.g., `ensurePath('~/path/to/wrote.data')` will attempt to create `~/path/to` directory recursively.\n * @param {string} path The path to the file.\n * @throws {Error} When the first folder in the path is non-executable.\n */\nexport function ensurePathSync(path) {\n  const dir = dirname(path)\n  try {\n    makeSync(dir)\n    return path\n  } catch (err) {\n    if (/EEXIST/.test(err.message) && err.message.indexOf(dir) != -1) {\n      return path\n    }\n    throw err\n  }\n}\n\n/**\n * Recursive promise-based mkdir.\n * @param {string} dir Path to the directory to be created\n */\nfunction makeSync(dir) {\n  try {\n    mkdirSync(dir)\n  } catch (err) {\n    if (err.code == 'ENOENT') {\n      const parentDir = dirname(dir)\n      makeSync(parentDir)\n      makeSync(dir)\n    } else if (err.code != 'EEXIST') { // created in parallel\n      throw err\n    }\n  }\n}","import { pseudoRandomBytes } from 'crypto'\nimport { tmpdir } from 'os'\nimport { join } from 'path'\nimport { createWriteStream } from 'fs'\nimport rm from '@wrote/rm'\nimport { ensurePathSync } from '@wrote/ensure-path'\n\nasync function getFilename() {\n  return await new Promise((r, j) => {\n    pseudoRandomBytes(16, (err, raw) => {\n      if (err) return j(err)\n      r(raw.toString('hex'))\n    })\n  })\n}\n\n/**\n * @implements {_multipart.FormDataStorageEngine}\n */\nexport default class DiskStorage {\n  /**\n   * @param {_multipart.FormDataDiskStorageOptions} [opts] The options.\n   */\n  constructor(opts = {}) {\n    const {\n      filename = getFilename,\n      destination = tmpdir,\n    } = opts\n\n    this.getFilename = filename\n\n    if (typeof destination == 'string') {\n      ensurePathSync(join(destination, 'file.dat'))\n      this.getDestination = () => destination\n    } else {\n      this.getDestination = destination\n    }\n  }\n  async _handleFile(req, file) {\n    const destination = await this.getDestination(req, file)\n    const filename = await this.getFilename(req, file)\n\n    const path = join(destination, filename)\n    const outStream = createWriteStream(path)\n\n    await new Promise((r, j) => {\n      file['stream'].pipe(outStream)\n      file['stream'].on('error', j)\n      outStream.on('error', j)\n      outStream.on('finish', r)\n    })\n    return {\n      'destination': destination,\n      'filename': filename,\n      'path': path,\n      'size': outStream.bytesWritten,\n    }\n  }\n\n  async _removeFile(req, file) {\n    const { 'path': path } = file\n\n    delete file['destination']\n    delete file['filename']\n    delete file['path']\n    await rm(path)\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataStorageEngine} _multipart.FormDataStorageEngine\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataDiskStorageOptions} _multipart.FormDataDiskStorageOptions\n */","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { collect } from 'catchment'\n\n/**\n * @implements {_multipart.FormDataStorageEngine}\n */\nexport default class MemoryStorage {\n  /**\n   * @param {http.IncomingMessage} req\n   * @param {_multipart.FormDataFile} file\n   */\n  async _handleFile(req, file) {\n    const data = await collect(/** @type {stream.Readable } */ (file['stream']), {\n      binary: true,\n    })\n    return {\n      'buffer': data,\n      'size': data.length,\n    }\n  }\n  async _removeFile(req, file) {\n    delete file['buffer']\n    return null\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').FormDataFile} _multipart.FormDataFile\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('http').IncomingMessage} http.IncomingMessage\n */","import makeMiddleware from './lib/make-middleware'\nimport DiskStorage from './storage/disk'\nimport MemoryStorage from './storage/memory'\nimport FormDataError from './lib/error'\n\nfunction allowAll() {\n  return true\n}\n\n/**\n * @implements {_multipart.FormData}\n */\nexport default class MultipartFormData {\n  /**\n   * Creates a new instance.\n   * @param {_multipart.FormDataConfig} [options] The configuration for the instance.\n   */\n  constructor(options = {}) {\n    const { storage, dest, limits = {}, preservePath = false, fileFilter = allowAll } = options\n    if (storage) {\n      this.storage = storage\n    } else if (dest) {\n      this.storage = new DiskStorage({ destination: dest })\n    } else {\n      this.storage = new MemoryStorage()\n    }\n\n\n    this.limits = /** @type {!_goa.BusBoyLimits} */ (limits)\n    this.preservePath = preservePath\n    this.fileFilter = fileFilter\n  }\n\n  /**\n   * @param {!Array<_multipart.FormDataField>} fields The fields to accept.\n   * @param {string} fileStrategy The strategy.\n   */\n  setup(fields, fileStrategy) {\n    const fileFilter = this.fileFilter\n    const filesLeft = {}\n\n    fields.forEach(({ maxCount = Infinity, name }) => {\n      filesLeft[name] = maxCount\n    })\n\n    /**\n     * @type {_multipart.FormDataFileFilter}\n     */\n    function wrappedFileFilter(req, file) {\n      if ((filesLeft[file.fieldname] || 0) <= 0)\n        throw FormDataError.create('LIMIT_UNEXPECTED_FILE', file.fieldname)\n\n      filesLeft[file.fieldname] -= 1\n      return fileFilter(req, file)\n    }\n\n    return {\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: wrappedFileFilter,\n      fileStrategy: fileStrategy,\n    }\n  }\n\n  single(name) {\n    const conf = this.setup([{ name: name, maxCount: 1 }], 'VALUE')\n    return makeMiddleware(conf)\n  }\n  array(name, maxCount) {\n    const conf = this.setup([{ name: name, maxCount: maxCount }], 'ARRAY')\n    return makeMiddleware(conf)\n  }\n  /**\n   *\n   * @param {!Array<_multipart.FormDataField>} fields The fields to accept.\n   */\n  fields(fields) {\n    const conf = this.setup(fields, 'OBJECT')\n    return makeMiddleware(conf)\n  }\n  none() {\n    const conf = this.setup([], 'NONE')\n    return makeMiddleware(conf)\n  }\n  any() {\n    return makeMiddleware({\n      limits: this.limits,\n      preservePath: this.preservePath,\n      storage: this.storage,\n      fileFilter: this.fileFilter,\n      fileStrategy: 'ARRAY',\n    })\n  }\n}\n\n/**\n * @param {_multipart.FormDataDiskStorageOptions} [opt] Options for the disk storage.\n */\nexport const diskStorage = (opt = {}) => {\n  return new DiskStorage(opt)\n}\n\nexport const memoryStorage = () => {\n  return new MemoryStorage()\n}\n\nexport { FormDataError }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataConfig} _multipart.FormDataConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataField} _multipart.FormDataField\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataFileFilter} _multipart.FormDataFileFilter\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').FormDataDiskStorageOptions} _multipart.FormDataDiskStorageOptions\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('@goa/busboy').BusBoyLimits} _goa.BusBoyLimits\n */","import '@externs/goa'\nimport '../types/externs'\n\nimport FormData, { diskStorage, memoryStorage, FormDataError } from './'\n\nmodule.exports = {\n  '_FormData': FormData,\n  '_diskStorage': diskStorage,\n  '_memoryStorage': memoryStorage,\n  '_FormDataError': FormDataError,\n}"],
"names":["Readable","stream","Writable","EventEmitter","events","jsmemcmp","buf1","pos1","buf2","pos2","num","i","_sbmh_feed","data","len","length","needle","_needle","needle_len","pos","_lookbehind_size","last_needle_char","occ","_occ","lookbehind","_lookbehind","_sbmh_lookup_char","res","ch","_sbmh_memcmp","matches","emit","_bufpos","bytesToCutOff","copy","SBMH","Buffer","maxMatches","Infinity","Array","j","chunk","isBuffer","chlen","r","PartStream","opts","B_DCRLF","from","RE_CRLF","RE_HDR","reset","finished","buffer","header","ss","HeaderParser","cfg","maxHeaderPairs","MAX_HEADER_PAIRS","nread","maxed","npairs","StreamSearch","on","isMatch","start","end","MAX_HEADER_SIZE","toString","_finish","lines","split","modded","h","m","exec","toLowerCase","undefined","push","B_ONEDASH","B_CRLF","EMPTY_FN","_part","_bparser","_hparser","_oninfo","buf","shouldWriteMore","_justMatched","_dashes","DASH","_events","trailer","slice","_finished","_parts","_realFinish","_partOpts","_read","this._part._read","_unpause","ev","_isPreamble","_ignore","_inHeader","_ignoreData","_pause","_cb","cb","Dicer","headerFirst","boundary","TypeError","setBoundary","_headerFirst","_firstWrite","partHwm","highWaterMark","prototype","apply","arguments","process","nextTick","Error","type","encoding","resume","TextDecoder","require","RE_ENCODED","encodedReplacer","match","byte","String","fromCharCode","parseInt","parseParams","str","state","charset","inquote","escaping","p","tmp","substring","decodeText","replace","text","destEncoding","ret","decode","textEncoding","e","HEX","RE_PLUS","Decoder","charCodeAt","basename","path","getLimits","limits","fieldSizeLimit","fieldNameSizeLimit","fileSizeLimit","filesLimit","fieldsLimit","partsLimit","Busboy","_done","_parser","hitPartsLimit","hitFilesLimit","hitFieldsLimit","headers","parseHeaders","parsed","matched","Type","TYPES","detect","test","parsedConType","fileHwm","defCharset","preservePath","args","write","RE_BOUNDARY","RE_FIELD","RE_CHARSET","RE_FILENAME","RE_NAME","Multipart","boy","checkFinished","nends","find","t","isArray","curFile","nfiles","nfields","curField","_needDrain","_nparts","_boy","parser","parserCfg","headerPairs","err","onPart","part","removeListener","skipPart","field","removeAllListeners","contype","fieldname","nsize","filename","file","FileStream","file._read","onData","extralen","truncated","onEnd","d","b","concat","_readableState","sync","writable","UrlEncoded","_hitLimit","decoder","_fields","_state","_checkingBytes","_bytesVal","_bytesKey","_val","_key","_valTrunc","_keyTrunc","idxeq","idxamp","keyTrunc","key","BusBoy","_BusBoy","Urlencoded","reFirstKey","reDigitPath","reNormalPath","parsePath","failure","last","firstKey","tail","steps","append","nextType","valueType","value","setLastValue","context","step","currentValue","entryValue","setValue","obj","forEach","item","appendField","store","reduce","insertPlaceholder","placeholder","strategy","req","files","removePlaceholder","idx","arr","indexOf","splice","replacePlaceholder","Object","assign","FileAppender","errorMessages","create","code","FormDataError","message","decrement","awaitZero","Promise","onceZero","once","Counter","testMultipart","contentType","startsWith","makeMiddleware","options","multerMiddleware","ctx","next","storage","fileFilter","fileStrategy","body","busboy","appender","pendingWrites","uploadedFiles","busboyFinished","fieldnameTruncated","valueTruncated","FormDataError$$module$src$lib$error.create","fieldNameSize","mimetype","originalname","aborting","tryCancel","info","_handleFile","fileInfo","error","pipe","remove","_removeFile","errors","removeUploadedFiles","unpipe","acc","accRes","pseudoRandomBytes","_crypto","homedir","os","tmpdir","dirname","join","relative","createWriteStream","fs","lstat","mkdirSync","readdir","rmdir","unlink","getStackSegment","stack","oneLine","splitStack","items","getEntryStack","transparent","stackSegment","getCallerFromArguments","caller","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","re","RegExp","source","filter","x","pathMatches","includes","trim","map","p1","makeCallback","entryCaller","entryStack","shadow","messageOrError","errorStack","calleeStackLine","isError","stackMessage","stackHeading","properties","erotic","checkArgumentIndex","makePromise","fn","resolveValue","er","fnLength","resolve","reject","allArgs","arg","lstatFiles","dirPath","dirContent","readFiles","relativePath","ls","all","isDirectory","lstatRes","isNotDirectory","readDirStructure","ignore","dir","lsr","directories","notDirectories","current","isFile","isSymbolicLink","dirs","rel","structure","content","removeFile","removeDir","keys","k","filesFullPaths","dirsFullPaths","rm","s","ensurePathSync","makeSync","parentDir","getFilename","raw","DiskStorage","destination","getDestination","this.getDestination","outStream","bytesWritten","pipeError","streamA","streamB","Catchment","binary","rs","proxyError","wrap","_","_caughtData","_promise","callback","collect","readable","promise","MemoryStorage","allowAll","setup","fields","filesLeft","maxCount","name","wrappedFileFilter","MultipartFormData","dest","conf","module","exports","FormData","opt","diskStorage","memoryStorage"]
}
